name: Build & Release

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:

  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  test:
    name: Test
    needs: [style]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # build: [stable, beta, nightly]
        build: [stable, beta]
        include:
          - build: beta
            rust: beta
          # - build: nightly
          #   rust: nightly
          #   benches: true

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust || 'stable' }}
          profile: minimal
          override: true
      - name: Install ssl, musl & protobuf
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev musl-tools protobuf-compiler
      - name: Build debug
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.features }}
      - name: Test
        uses: actions-rs/cargo@v1
        env:
          RUST_TEST_THREADS: 1
        with:
          command: test
          args: ${{ matrix.features }} 
      - name: Test all benches
        if: matrix.benches
        uses: actions-rs/cargo@v1
        env:
          RUST_TEST_THREADS: 1
        with:
          command: test
          args: --benches ${{ matrix.features }}

  linux_x86_64:
    name: build and package
    needs: [test]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: 
          - x86_64-unknown-linux-gnu 
          - x86_64-unknown-linux-musl
          - x86_64-unknown-netbsd
    # container:
    #   image: docker://ghcr.io/rust-cross/rust-musl-cross:${{ matrix.platform.image_tag }}
    #   env:
    #     CFLAGS_armv7_unknown_linux_musleabihf: '-mfpu=vfpv3-d16'
    steps:
      - uses: actions/checkout@v3
      - name: Install ssl, musl & protobuf
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev musl-tools protobuf-compiler
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.platform }}    

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --release --target ${{ matrix.platform }}
    
    #   - name: Upload wheels
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: wheels
    #       path: dist
    #   - name: Upload binary artifacts
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: ${{ matrix.platform.target }}-bin
    #       path: target/${{ matrix.platform.target }}/release/cargo-zigbuild
    #       if-no-files-found: error
    #   - name: Get tag
    #     if: "startsWith(github.ref, 'refs/tags/')"
    #     id: tag
    #     uses: dawidd6/action-get-tag@v1
    #   - name: Archive binary
    #     if: "startsWith(github.ref, 'refs/tags/')"
    #     run: |
    #       cd target/${{ matrix.platform.target }}/release
    #       tar czvf cargo-zigbuild-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz cargo-zigbuild
    #       shasum -a 256 cargo-zigbuild-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz > cargo-zigbuild-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
    #       cd -
    #   - name: Upload binary to GitHub Release
    #     if: "startsWith(github.ref, 'refs/tags/')"
    #     uses: softprops/action-gh-release@v1
    #     with:
    #       files: |
    #         target/${{ matrix.platform.target }}/release/cargo-zigbuild*.tar.gz*
    #       prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
    #       generate_release_notes: true
